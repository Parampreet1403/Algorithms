class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        // [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
        
        vector<int> ans{};
        
        if (matrix.empty())
            return ans;
        
        int left{};
        int right = matrix[0].size() - 1;
        int top = 0;
        int bottom = matrix.size() - 1;
        int matrix_size = matrix.size() * matrix[0].size();
        

        
        while (ans.size() != matrix_size) {
            for (int i = left; i <= right && ans.size() != matrix_size;  i++) 
                ans.push_back(matrix[top][i]);
            top++;
            
            for (int i = top; i <= bottom && ans.size() != matrix_size; i++)
                ans.push_back(matrix[i][right]);
            right--;
            
            for (int i = right; i >= left && ans.size() != matrix_size; i--)
                ans.push_back(matrix[bottom][i]);
            bottom--;
            
            for (int i = bottom; i >= top && ans.size() != matrix_size; i--)
                ans.push_back(matrix[i][left]);
            left++;
                
        }
        
        
    return ans;}
};
