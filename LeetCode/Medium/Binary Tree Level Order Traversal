/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {

        std::vector<std::vector<int>> ans{};
        
        // Base case
        if (root == nullptr) return ans;
    
        // Level Order 
        std::queue<TreeNode*> q;
        q.push(root);
        
        while(!q.empty())
        {
            int size = q.size();
            std::vector<int> temp;
            
            for (int i{}; i < size; i++)
            {
                TreeNode* current = q.front();
                temp.push_back(current->val);
                
                // LRD
                if (current->left != nullptr) q.push(current->left);
                if (current->right != nullptr) q.push(current->right);
                q.pop();
            }
            ans.push_back(temp);
        }
        
        return ans;
        
    }
};
