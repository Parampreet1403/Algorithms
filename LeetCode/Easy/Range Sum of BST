/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    std::vector<int> tree{};

public:
    int rangeSumBST(TreeNode* root, int L, int R) {
        int ans{};
        
        inOrder(root);
        
        for (auto num : tree)
             {
                if (num >= L && num <= R)
                    ans += num;
             }
        return ans;
    }
    
    void inOrder(TreeNode* node) {
        // Base check
        if (node == nullptr) return;
        
        // Depth First Search
        inOrder(node->left);
        tree.push_back(node->val);
        inOrder(node->right);
    }
};
